

// Процедура - Получаем код авторизации
//
// Параметры:
//  Команда	 - 	 - 
// Получаем код авторизации в браузере
&НаКлиенте
Процедура ПолучаемКодАвторизации(Команда)
	
	URL = "https://accounts.google.com/o/oauth2/v2/auth?";
	URL = URL + "client_id=" + client_id;
	URL = URL + "&response_type=code";
	URL = URL + "&access_type=offline";
	URL = URL + "&scope=https://www.googleapis.com/auth/firebase.messaging";
	URL = URL + "&redirect_uri=" + redirect_uri;
	ПерейтиПоНавигационнойСсылке(URL);
	
КонецПроцедуры

// Процедура - Получаемтокены на сервере
// при первой авторизации получаем два токена, рефреш токен получается только при первой авторизации
&НаСервере
Процедура ПолучаемтокеныНаСервере()
	
	Параметрыы = "";
	Параметрыы = Параметрыы + "code=" + authorization_code;
	Параметрыы = Параметрыы + "&client_id=" + client_id;
	Параметрыы = Параметрыы + "&client_secret=" + client_secret;
	Параметрыы = Параметрыы + "&redirect_uri=" + redirect_uri;
	Параметрыы = Параметрыы + "&grant_type=authorization_code";
	SSl = Новый ЗащищенноеСоединениеOpenSSL();
	Соединение = Новый HTTPСоединение("oauth2.googleapis.com", , , , , ,SSl);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Заголовки.Вставить("Content-Charset", "utf-8");		
	
	ОписаниеОшибки = "";
	
	HTTPЗапрос = Новый HTTPЗапрос("/token", Заголовки);		
	HTTPЗапрос.УстановитьТелоИзСтроки(Параметрыы, КодировкаТекста.UTF8);
	Результат  = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	ТекДата = ТекущаяДата();
	
	СтрокаОтвет = Результат.ПолучитьТелоКакСтроку();
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаОтвет);
	ДанныеОтвет = ПрочитатьJSON(Чтение, Истина);
	Чтение.Закрыть();
	
	Если Не ДанныеОтвет = Неопределено Тогда
		Если НЕ ДанныеОтвет.Получить("error") = Неопределено Тогда
			ОписаниеОшибки = СтрШаблон(
			"error=%1: %2",
			ДанныеОтвет.Получить("error"),
			ДанныеОтвет.Получить("error_description"));
		Иначе
			access_token = ДанныеОтвет.Получить("access_token");
			expires_in = ДанныеОтвет.Получить("expires_in");
			ДатаПолученияТокена = ТекДата;
			ВремяжизниТокена = ТекДата + Число(expires_in);
			refresh_token = ДанныеОтвет.Получить("refresh_token");
		КонецЕсли;
	Иначе
		ОписаниеОшибки = "Не получены данные от сервера!";		
	КонецЕсли;
	
	Если ОписаниеОшибки <> "" Тогда
		Сообщить("Ошибки при получении токена: "+ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Получаемтокены(Команда)
	ПолучаемтокеныНаСервере();
КонецПроцедуры

// Процедура - Обновить токены на сервере
// время жизни токена ограничено, поэтому его нужно обновлять
&НаСервере
Процедура ОбновитьТокеныНаСервере()
	
	Параметрыы = "";
	Параметрыы = Параметрыы + "client_id=" + client_id;
	Параметрыы = Параметрыы + "&client_secret=" + client_secret;
	Параметрыы = Параметрыы + "&refresh_token=" + refresh_token;
	Параметрыы = Параметрыы + "&grant_type=refresh_token";
	
	SSl = Новый ЗащищенноеСоединениеOpenSSL( неопределено, неопределено );
	Соединение = Новый HTTPСоединение("oauth2.googleapis.com", , , , , ,SSl);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	Заголовки.Вставить("Content-Charset", "utf-8");		
	
	ОписаниеОшибки = "";
	
	HTTPЗапрос = Новый HTTPЗапрос("/token", Заголовки);		
	HTTPЗапрос.УстановитьТелоИзСтроки(Параметрыы, КодировкаТекста.UTF8);
	Результат  = Соединение.ОтправитьДляОбработки(HTTPЗапрос); 
	ТекДата = ТекущаяДата();
	СтрокаОтвет = Результат.ПолучитьТелоКакСтроку();
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаОтвет);
	ДанныеОтвет = ПрочитатьJSON(Чтение, Ложь);
	Чтение.Закрыть();
	
	Если Не ДанныеОтвет = Неопределено Тогда
		Если ДанныеОтвет.Свойство("error") Тогда
			ОписаниеОшибки = СтрШаблон(
			"error=%1: %2",
			ДанныеОтвет.error,
			ДанныеОтвет.error_description);
		Иначе	
			access_token = ДанныеОтвет.access_token;
			expires_in = ДанныеОтвет.expires_in;
			ДатаПолученияТокена = ТекДата;
			ВремяжизниТокена = ТекДата + Число(expires_in);
		КонецЕсли;
	Иначе
		ОписаниеОшибки = "Не получены данные от сервера!";		
	КонецЕсли;
	
	Если ОписаниеОшибки <> "" Тогда
		ВызватьИсключение "Ошибки при получении токена: "+ОписаниеОшибки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТокены(Команда)
	ОбновитьТокеныНаСервере();
КонецПроцедуры

// Процедура - Отправить сообщение на сервере
// Собственно отправка сообщений
&НаСервере
Процедура ОтправитьСообщениеНаСервере()
	
	//на всякий який запас 5 сек
	Если ТекущаяДата() > ВремяжизниТокена - 5 тогда
		ОбновитьТокеныНаСервере();
	КонецЕсли;
	
	message = Новый Структура;
	message.Вставить("token", ИдентификаторУстройства);
	
	notification = Новый Структура;
	notification.Вставить("title", ЗаголовокСообщения);
	notification.Вставить("body", ТекстСообщения);
	
	message.Вставить("notification", notification);
	
	android = Новый Структура;
	android.Вставить("notification", Новый Структура("visibility", "PUBLIC"));
	
	message.Вставить("android", android);
	
	Сообщение = Новый Структура("message", message);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Сообщение);	
	ТелоЗапроса = ЗаписьJSON.Закрыть();
	
	АдресРесурса = СтрШаблон("/v1/projects/%1/messages:send", projectId);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", "Bearer " + access_token);
	Заголовки.Вставить("Content-Type", "application/json");
	
	Запрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
	Запрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	
	Соединение = Новый HTTPСоединение("fcm.googleapis.com",,,,,, Новый ЗащищенноеСоединениеOpenSSL);
	Результат = Соединение.ОтправитьДляОбработки(Запрос);
	
	СтрокаОтвета = Результат.ПолучитьТелоКакСтроку();
	
	//тут можно добавить запись в журнал регистрации 
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрокаОтвета;
	Сообщение.Сообщить(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	ОчиститьСообщения();
	ОтправитьСообщениеНаСервере();
КонецПроцедуры
